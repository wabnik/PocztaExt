
//----------------------------------------------------------------------------------
// <autogenerated>
//		This code was generated by a tool.
//		Changes to this file may cause incorrect behaviour and will be lost 
//		if the code is regenerated.
// </autogenerated>
//----------------------------------------------------------------------------------

using System;
using System.Text;
using System.Collections;
using System.ComponentModel;
using Soneta.Types;
using Soneta.Business;
using Soneta.Handel;
using Soneta.CRM;
using Soneta.Examples.PocztaExt.WiadomosciExt;

[assembly: ModuleType("PocztaExt", typeof(Soneta.Examples.PocztaExt.WiadomosciExt.PocztaExtModule), 2, "WiadomosciExt", 1, VersionNumber=1)]

namespace Soneta.Examples.PocztaExt.WiadomosciExt {

	/// <summary>
	/// Moduł PocztaExt.
	/// <seealso cref="Soneta.Handel"/>
	/// <seealso cref="Soneta.CRM"/>
	/// </summary>
	/// <seealso cref="Soneta.Business.Module"/>
	/// <seealso cref="Soneta.Business.Session"/>
	[System.CodeDom.Compiler.GeneratedCode("Soneta.Generator", "2")]
	public partial class PocztaExtModule : Module {

		public static PocztaExtModule GetInstance(ISessionable session) {
			if (session == null || session.Session == null) return null;
			return (PocztaExtModule)session.Session.Modules[typeof(PocztaExtModule)];
		}

		/// <summary>
		/// Standardowy kontruktor modułu sesji.
		/// </summary>
		/// <param name="session">Sesja w której jest tworzony ten moduł.</param>
		public PocztaExtModule(Session session) : base(session, "PocztaExt") {
			AddTable(tableWiadomoscExt);
			Initialize();
		}

		HandelModule moduleHandel = null;

		[Browsable(false)]
		public HandelModule Handel {
			get {
				if (moduleHandel==null)
				    moduleHandel = HandelModule.GetInstance(Session);
				return moduleHandel;
			}
		}

		CRMModule moduleCRM = null;

		[Browsable(false)]
		public CRMModule CRM {
			get {
				if (moduleCRM==null)
				    moduleCRM = CRMModule.GetInstance(Session);
				return moduleCRM;
			}
		}

		static int handleWiadomosciExt = 0;

		private WiadomosciExt tableWiadomoscExt = new WiadomosciExt();
		/// <summary>
		/// Tabela WiadomoscExt.
		/// </summary>
		public WiadomosciExt WiadomosciExt {
			get { return tableWiadomoscExt; } 
		}

		/// <summary>
		/// Klasa implementująca standardową obsługę tabeli obiektów WiadomoscExt.
		/// Dziedzicząca klasa <see cref="WiadomosciExt"/> zawiera kod użytkownika
		/// zawierający specyficzną funkcjonalność tabeli, która nie zawiera się w funkcjonalności
		/// biblioteki <see cref="Soneta.Business"/>.
		/// </summary>
		/// <seealso cref="WiadomosciExt"/>
		/// <seealso cref="WiadomoscExtRow"/>
		/// <seealso cref="WiadomoscExt"/>
		/// <seealso cref="Soneta.Business.Table"/>
		[TableName("WiadomoscExt", "Wiadomos", "WiadomosciExt", typeof(WiadomoscExt))]
		public abstract partial class WiadomoscExtTable : GuidedTable {

			protected WiadomoscExtTable() : base(false, false) {
			}

			public class WiadomoscRelation : SimpleRelation {
				protected override object [] GetData(Row row, Record rec) {
					return new object[] {
						((WiadomoscExtRecord)rec).Wiadomosc,
						row.ID};
				}
				public WiadomoscRelation(WiadomoscExtTable table) {
					Table = table;
					Name = "Dokumenty związane z wiadomością";
					ParentName = "WiadomoscEmail";
					ChildColumn = "Wiadomosc";
					InitFields("Wiadomosc", "ID");
					table.Session.Keys.Add(this);
				}

				public SubTable this[WiadomoscEmail wiadomosc] {
					get {
						return new SubTable(this, wiadomosc);
					}
				}
			}

			WiadomoscRelation relationWiadomosc;

			public WiadomoscRelation WgWiadomosc {
				get { return relationWiadomosc; } 
			}

			public class DokumentRelation : SimpleRelation {
				protected override object [] GetData(Row row, Record rec) {
					return new object[] {
						((WiadomoscExtRecord)rec).Dokument,
						row.ID};
				}
				public DokumentRelation(WiadomoscExtTable table) {
					Table = table;
					Name = "Powiązanie dokumentu z wiadomosciąEmail";
					ParentName = "DokumentHandlowy";
					ChildColumn = "Dokument";
					InitFields("Dokument", "ID");
					table.Session.Keys.Add(this);
				}

				public SubTable this[DokumentHandlowy dokument] {
					get {
						return new SubTable(this, dokument);
					}
				}
			}

			DokumentRelation relationDokument;

			public DokumentRelation WgDokument {
				get { return relationDokument; } 
			}

			public class WgWiadomoscDokumentKey : Key {
				protected override object [] GetData(Row row, Record rec) {
					return new object[] {
						((WiadomoscExtRecord)rec).Wiadomosc,
						((WiadomoscExtRecord)rec).Dokument};
				}
				public WgWiadomoscDokumentKey(WiadomoscExtTable table) {
					Table = table;
					Name = "WgWiadomoscDokument";
					Unique = true;
					InitFields("Wiadomosc", "Dokument");
					table.Session.Keys.Add(this);
				}

				public SubTable this[WiadomoscEmail wiadomosc] {
					get {
						return new SubTable(this, wiadomosc);
					}
				}

				public WiadomoscExt this[WiadomoscEmail wiadomosc, DokumentHandlowy dokument] {
					get {
						return (WiadomoscExt)Find(wiadomosc, dokument);
					}
				}
			}

			WgWiadomoscDokumentKey keyWgWiadomoscDokument;

			public WgWiadomoscDokumentKey WgWiadomoscDokument {
				get { return keyWgWiadomoscDokument; } 
			}


			protected override void LoadChildRelations() {
			}

			/// <summary>
			/// Typowane property dostarczające obiekt modułu zawierającegą tą tabelę. Umożliwia dostęp do
			/// innych obiektów znajdujących się w tym samym module.
			/// </summary>
			/// <seealso cref="PocztaExtModule"/>
			public new PocztaExtModule Module {
				get { return (PocztaExtModule)base.Module; } 
			}

			/// <summary>
			/// Typowany indekser dostarczający obiekty znajdujące się w tej tabeli przy pomocy 
			/// ID identyfikującego jednoznacznie obiekt w systemie.
			/// </summary>
			/// <param name="id">Liczba będąca unikalnym identyfikatorem obiektu. Wartości
			/// ujemne identyfikują obiekty, które zostały dodane i nie są jeszcze zapisane do bazy danych.</param>
			/// <seealso cref="WiadomoscExt"/>
			public new WiadomoscExt this[int id] {
				get { return (WiadomoscExt)base[id]; } 
			}

			public new WiadomoscExt this[Guid guid] {
				get { return (WiadomoscExt)base[guid]; } 
			}

			protected override void Adding(Module module) {
				base.Adding(module);
				relationWiadomosc = new WiadomoscRelation(this);
				relationDokument = new DokumentRelation(this);
				keyWgWiadomoscDokument = new WgWiadomoscDokumentKey(this);
				SetPrimaryKey(keyWgWiadomoscDokument);
			}

			protected override Record CreateRecord() {
				return new WiadomoscExtRecord();
			}

			protected override Row CreateRow(RowCreator creator) {
				return new WiadomoscExt(creator);
			}

			/// <summary>
			/// Metoda zwracająca typ wierszy znajdujących się w tej tabeli.
			/// </summary>
			/// <returns>Metoda zwraca zawsze wartość typeof(WiadomoscExt).</returns>
			/// <seealso cref="WiadomoscExt"/>
			public override Type GetRowType() {
				return typeof(WiadomoscExt);
			}

			protected override sealed int GetTableHandle() {
				return handleWiadomosciExt;
			}

			protected override sealed void PrepareNames(StringBuilder names, string divider, bool prepareTextFields) {
				names.Append(divider); names.Append("Guid");
				names.Append(divider); names.Append("Wiadomosc");
				names.Append(divider); names.Append("Dokument");
			}

			protected override sealed void PrepareTypes(System.Collections.Generic.List<Type> types) {
				types.Add(typeof(Guid));
				types.Add(typeof(Row));
				types.Add(typeof(Row));
			}

		}

		[RecordType(typeof(WiadomoscExtRecord))]
		[Caption("Poziązanie wiadmości z dokumentem handlowym")]
		public abstract partial class WiadomoscExtRow : GuidedRow {

			private WiadomoscExtRecord record = null;


			protected override void AssignRecord(Record rec) {
				record = (WiadomoscExtRecord)rec;
			}

			protected WiadomoscExtRow(RowCreator creator) : base(false) {
			}

			protected WiadomoscExtRow([Required] WiadomoscEmail wiadomosc, [Required] DokumentHandlowy dokument) : base(true) {
				if (wiadomosc==null) throw new RequiredException(this, "Wiadomosc");
				if (dokument==null) throw new RequiredException(this, "Dokument");
				GetRecord();
				record.Wiadomosc = wiadomosc;
				record.Dokument = dokument;
			}

			[Description("Powiązanie wiadomości eMail z Dokumentem handlowym.")]
			[Category("Ogólne")]
			[Caption("WiadomoscEmail")]
			[Required]
			public WiadomoscEmail Wiadomosc {
				get {
					if (record==null) GetRecord();
					if (record.Wiadomosc==null) return null;
					WiadomoscEmail row = (WiadomoscEmail)record.Wiadomosc.Root;
					record.Wiadomosc = row;
					return row;
				}
			}

			[Description("Powiązanie dokumentu z wiadomościami Email")]
			[Category("Ogólne")]
			[Caption("Dokument")]
			[Required]
			public DokumentHandlowy Dokument {
				get {
					if (record==null) GetRecord();
					if (record.Dokument==null) return null;
					DokumentHandlowy row = (DokumentHandlowy)record.Dokument.Root;
					record.Dokument = row;
					return row;
				}
			}

			[Browsable(false)]
			public new WiadomosciExt Table {
				get { return (WiadomosciExt)base.Table; }
			}

			[Browsable(false)]
			public PocztaExtModule Module {
				get { return Table.Module; }
			}

			protected override sealed int GetTableHandle() {
				return handleWiadomosciExt;
			}

			protected override Record CreateRecord() {
				return new WiadomoscExtRecord();
			}

			public sealed override AccessRights GetObjectRight() {
				AccessRights ar = CalcObjectRight();
				if (WiadomoscExtSchema.OnCalcObjectRight!=null)
					WiadomoscExtSchema.OnCalcObjectRight((WiadomoscExt)this, ref ar);
				return ar;
			}

			protected sealed override AccessRights GetParentsObjectRight() {
				AccessRights result = CalcParentsObjectRight();
				if (WiadomoscExtSchema.OnCalcParentsObjectRight!=null)
					WiadomoscExtSchema.OnCalcParentsObjectRight((WiadomoscExt)this, ref result);
				return result;
			}

			protected override void OnAdded() {
				base.OnAdded();
				System.Diagnostics.Debug.Assert(record.Wiadomosc==null || record.Wiadomosc.State==RowState.Detached || Session==record.Wiadomosc.Session);
				System.Diagnostics.Debug.Assert(record.Dokument==null || record.Dokument.State==RowState.Detached || Session==record.Dokument.Session);
				if (WiadomoscExtSchema.OnAdded!=null)
					WiadomoscExtSchema.OnAdded((WiadomoscExt)this);
			}

			protected override void OnLoaded() {
				base.OnLoaded();
				if (WiadomoscExtSchema.OnLoaded!=null)
					WiadomoscExtSchema.OnLoaded((WiadomoscExt)this);
			}

			protected override void OnEditing() {
				base.OnEditing();
				if (WiadomoscExtSchema.OnEditing!=null)
					WiadomoscExtSchema.OnEditing((WiadomoscExt)this);
			}

			protected override void OnDeleting() {
				base.OnDeleting();
				if (WiadomoscExtSchema.OnDeleting!=null)
					WiadomoscExtSchema.OnDeleting((WiadomoscExt)this);
			}

			protected override void OnDeleted() {
				base.OnDeleted();
				if (WiadomoscExtSchema.OnDeleted!=null)
					WiadomoscExtSchema.OnDeleted((WiadomoscExt)this);
			}

		}

		[ParentTable("WiadomoscExt")]
		public sealed class WiadomoscExtRecord : GuidedRecord {
			[Required]
			[ParentTable("WiadomoscEmail")]
			public IRow Wiadomosc;
			[Required]
			[ParentTable("DokumentHandlowy")]
			public IRow Dokument;

			public override Record Clone() {
				WiadomoscExtRecord rec = (WiadomoscExtRecord)MemberwiseClone();
				return rec;
			}

			public override void Load(RowCreator creator, int delta) {
				System.Diagnostics.Debug.Assert(delta==0);
				Guid = creator.Load_guid(1);
				Wiadomosc = creator.Load_Row(2, "WiadomosciEmail");
				Dokument = creator.Load_Row(3, "DokHandlowe");
			}
		}

		public static class WiadomoscExtSchema {

			internal static RowDelegate<WiadomoscExtRow> OnLoaded;
			public static void AddOnLoaded(RowDelegate<WiadomoscExtRow> value) {
				OnLoaded = (RowDelegate<WiadomoscExtRow>)Delegate.Combine(OnLoaded, value);
			}

			internal static RowDelegate<WiadomoscExtRow> OnAdded;
			public static void AddOnAdded(RowDelegate<WiadomoscExtRow> value) {
				OnAdded = (RowDelegate<WiadomoscExtRow>)Delegate.Combine(OnAdded, value);
			}

			internal static RowDelegate<WiadomoscExtRow> OnEditing;
			public static void AddOnEditing(RowDelegate<WiadomoscExtRow> value) {
				OnEditing = (RowDelegate<WiadomoscExtRow>)Delegate.Combine(OnEditing, value);
			}

			internal static RowDelegate<WiadomoscExtRow> OnDeleting;
			public static void AddOnDeleting(RowDelegate<WiadomoscExtRow> value) {
				OnDeleting = (RowDelegate<WiadomoscExtRow>)Delegate.Combine(OnDeleting, value);
			}

			internal static RowDelegate<WiadomoscExtRow> OnDeleted;
			public static void AddOnDeleted(RowDelegate<WiadomoscExtRow> value) {
				OnDeleted = (RowDelegate<WiadomoscExtRow>)Delegate.Combine(OnDeleted, value);
			}

			internal static RowAccessRightsDelegate<WiadomoscExtRow> OnCalcObjectRight;
			public static void AddOnCalcObjectRight(RowAccessRightsDelegate<WiadomoscExtRow> value) {
				OnCalcObjectRight = (RowAccessRightsDelegate<WiadomoscExtRow>)Delegate.Combine(OnCalcObjectRight, value);
			}

			internal static RowAccessRightsDelegate<WiadomoscExtRow> OnCalcParentsObjectRight;
			public static void AddOnCalcParentsObjectRight(RowAccessRightsDelegate<WiadomoscExtRow> value) {
				OnCalcParentsObjectRight = (RowAccessRightsDelegate<WiadomoscExtRow>)Delegate.Combine(OnCalcParentsObjectRight, value);
			}

		}

	}
}

